import { camelToUnderscore, get_module_name } from "./helpers"

class LambdaHandler {
  name: string
  pkg: string
  pkgName: string

  constructor(name: string, pkgName: string) {
    this.name = name
    this.pkgName = pkgName

    // TODO: find package ./*/pkgName
    this.pkg = ""
  }

  lambda_name(): string {
    return camelToUnderscore(this.name)
  }
}

export class LambdaGenerator {
  private _baseDir: string
  private _handlers: LambdaHandler[]
  private _go_module: string

  constructor(baseDir: string) {
    this._baseDir = baseDir
    this._handlers = []
    this._go_module = "example.com"
    get_module_name()
  }

  add(name: string, pkg: string): void {
    this._handlers.push(new LambdaHandler(name, pkg))
  }

  generate(): void {
    for (let handler of this._handlers) {
      console.log("name:", handler.lambda_name())
      this.write(handler)
    }
  }

  build(): void {
    for (let handler of this._handlers) {
      console.log(`calling go build for ${handler.name}`)
    }
  }

  write(handler: LambdaHandler): void {
    const body = `
// This code is autogenerated by lambda-go-gen
// DO NOT EDIT this file.

import (
    "github.com/aws/aws-lambda-go/lambda"
    "${this._go_module}/internal/${handler.pkgName}/handlers"
)

func main() {
    lambda.Start(handlers.${handler.name}Handler())
}

`
    // console.log("body:", body)
  }
}
